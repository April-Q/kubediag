apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-diagnoser-master
  namespace: kube-diagnoser
  labels:
    control-plane: kube-diagnoser
    mode: master
spec:
  selector:
    matchLabels:
      control-plane: kube-diagnoser
      mode: master
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        control-plane: kube-diagnoser
        mode: master
    spec:
      containers:
      - command:
        - /kube-diagnoser
        args:
        - --mode=master
        - --address=0.0.0.0:8089
        - --metrics-address=0.0.0.0:10357
        - --enable-leader-election=true
        image: hub.c.163.com/combk8s/kube-diagnoser:v0.1.4
        name: kube-diagnoser
        ports:
        - containerPort: 10357
          name: metrics
        - containerPort: 8089
          name: http
        resources:
          limits:
            cpu: 400m
            memory: 400Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          privileged: true
      hostNetwork: true
      hostPID: true
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
      serviceAccountName: kube-diagnoser
      terminationGracePeriodSeconds: 10
      tolerations:
      - operator: Exists
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-diagnoser-agent
  namespace: kube-diagnoser
  labels:
    control-plane: kube-diagnoser
    mode: agent
spec:
  selector:
    matchLabels:
      control-plane: kube-diagnoser
      mode: agent
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 5
    type: RollingUpdate
  template:
    metadata:
      labels:
        control-plane: kube-diagnoser
        mode: agent
    spec:
      containers:
      - command:
        - /kube-diagnoser
        args:
        - --mode=agent
        - --address=0.0.0.0:8090
        - --metrics-address=0.0.0.0:10355
        - --node-name=$(NODE_NAME)
        image: hub.c.163.com/combk8s/kube-diagnoser:v0.1.4
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        name: kube-diagnoser
        ports:
        - containerPort: 10355
          name: metrics
        - containerPort: 8090
          name: http
        resources:
          limits:
            cpu: 400m
            memory: 400Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: docker-sock
        - mountPath: /var/lib/docker
          name: docker-data
        - mountPath: /var/lib/kubelet
          name: kubelet-data
      volumes:
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
          type: Socket
      - name: docker-data
        hostPath:
          path: /var/lib/docker
          type: Directory
      - name: kubelet-data
        hostPath:
          path: /var/lib/kubelet
          type: Directory
      hostNetwork: true
      hostPID: true
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
      serviceAccountName: kube-diagnoser
      terminationGracePeriodSeconds: 10
      tolerations:
      - operator: Exists
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-diagnoser
  namespace: kube-diagnoser
